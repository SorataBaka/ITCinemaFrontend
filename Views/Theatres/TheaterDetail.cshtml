@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<link rel="stylesheet" href="./css/theaterDetail.css">
<div class="container my-5" id="mainContainer">
  <div class="row">
    <div class="col  d-block" >
        @*Foto masih dummy data (blm ada datanya di API)*@
     <h2 id="theaterName"></h2>
     <h2 id="theaterSeats"></h2>
    </div>
  </div>

  <div class="container pt-5" id="movieMain">
    <div class="row">
        <div class="col">
            <p>Movies Available:</p>
        </div>
    </div>
    <div class="row text-center bg-secondary py-3 rounded">
        <div class="col ">Movie</div>
        <div class="col ">Showtime</div>
    </div>
    <div class="row">
        <div class="col-sm"></div>
        <div style="display:inline-flex; justify-content: space-around" class="col-sm">
            <div onclick="getTheaterDetailToday()" style="cursor: pointer;" id="today-date">today</div>
            <div onclick="getTheaterDetailTomorrow()" style="cursor: pointer;" id="tomorrow-date">tomorrow</div>
        </div>
    </div>

</div>

</div>



<script>
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const theaterID = urlParams.get('id');
    var today = new Date();
    var todayDate = today.getFullYear()+'-'+(("0"+(today.getMonth()+1)).slice(-2))+'-'+(("0"+today.getDate()).slice(-2))
    var tomorrowDate = today.getFullYear()+'-'+(("0"+(today.getMonth()+1)).slice(-2))+'-'+(("0"+(today.getDate()+1)).slice(-2))
    document.getElementById("today-date").innerHTML = `${todayDate}`;   
    document.getElementById("tomorrow-date").innerHTML = `${tomorrowDate}`; 
    const MovieMainContainer = document.getElementById("movieMain");

    const getTheater = async (theaterID)=>{
        const response = await fetch(`https://itcinemabackend-production.up.railway.app/theater/gettheaters?theaterID=${theaterID}`);
       const theaterData = await response.json();
       const datas = theaterData.Data;
       return datas;
    }

   const getTheaterDetails = async (theaterID,date)=>{
        const MovieRows = document.getElementsByClassName("movieRow");
        for(let i =0;i< MovieRows.length; i++){
            MovieRows[i].remove();
        }
       const loadingTheaterRows = document.createElement("div");
        loadingTheaterRows.classList.add("loadingMovieRows")
        loadingTheaterRows.innerText = "Loading...";
        MovieMainContainer.appendChild(loadingTheaterRows);

       const response = await fetch(`https://itcinemabackend-production.up.railway.app/theater/getheaterdetails?theaterID=${theaterID}&date=${date}`);
       const theaterDetailData = await response.json();
       const theaterDetails = theaterDetailData.Data;
        
       for (let i = 0; i < theaterDetails.PlayAt.length; i++) {
        const MovieRow = document.createElement("div");
        MovieRow.classList.add("row");
        MovieRow.classList.add("py-2");
        MovieRow.classList.add("movieRow");
        const ColMovieName = document.createElement("div");
        ColMovieName.classList.add("col");
        ColMovieName.classList.add("text-center");
        ColMovieName.classList.add("align-middle");

        const MovieNameP = document.createElement("p");
        MovieNameP.classList.add("theaterName");
        MovieNameP.classList.add("align-middle");
        MovieNameP.classList.add("m-auto");
        MovieNameP.innerText = theaterDetails.PlayAt[i].MovieTitle;

        const ColMovieTime = document.createElement("div");
        ColMovieTime.classList.add("col");

        const ContainerMovieTime = document.createElement("div");
        ContainerMovieTime.classList.add("text-center");
        ContainerMovieTime.classList.add("d-flex");
        ContainerMovieTime.classList.add("flex-row");
        const timeLength = theaterDetails.PlayAt[i].Time.length;
        //Tiap Showtime ada dikasih href ke scheduleID masing masing
        for (let j = 0; j < timeLength; j++) {
          let MovieTimeA = document.createElement("a");
          MovieTimeA.classList.add("bg-secondary");
          MovieTimeA.classList.add("rounded");
          MovieTimeA.classList.add("p-2");
          MovieTimeA.classList.add("m-1");
          MovieTimeA.classList.add("text-decoration-none");
          MovieTimeA.classList.add("text-reset");
          MovieTimeA.classList.add("MovieTimeA");
          const MovieTime = theaterDetails.PlayAt[i].Time[j].PlayingAt;
          const StartTime = new Date(MovieTime);
          const hours = ("0" + StartTime.getHours()).slice(-2);
          const minutes = ("0" + StartTime.getMinutes()).slice(-2);
          MovieTimeA.innerText = hours + ":" + minutes;
          MovieTimeA.href = `/booking?scheduleid=${theaterDetails.PlayAt[i].Time[j].ScheduleID}`;
          ContainerMovieTime.appendChild(MovieTimeA);
        }

        MovieRow.appendChild(ColMovieName);
        ColMovieName.appendChild(MovieNameP);
        MovieRow.appendChild(ColMovieTime);
        ColMovieTime.appendChild(ContainerMovieTime);

        MovieMainContainer.appendChild(MovieRow);
      }
       loadingTheaterRows.remove();
   }

    

    const final = async (theaterID)=>{
        document.getElementById("mainContainer").style.visibility = 'hidden';
        const theaterData = await getTheater(theaterID);
        document.getElementById("theaterName").innerText = theaterData[0].TheaterName
        document.getElementById("theaterSeats").innerText = theaterData[0].TheaterSeats === 122 ? 'Seats: 102' : `Seats: ${theaterData[0].TheaterSeats}`;
        await getTheaterDetails(theaterID,todayDate);
        
      document.getElementById("mainContainer").style.visibility = 'visible';
    }



    const getTheaterDetailToday = async ()=>{
        await getTheaterDetails(theaterID,todayDate);
    }
    const getTheaterDetailTomorrow = async ()=>{
        await getTheaterDetails(theaterID,tomorrowDate);
    }  
    
    final(theaterID);
    
    
</script>