@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<link rel="stylesheet" href="/css/movieDetail.css">
<div class="container my-5" id="mainContainer">
  <div class="row">
    <div class="col mx-auto d-block" style="max-width:50%">
        @*Foto masih dummy data (blm ada datanya di API)*@
      <img
      style="max-width:100%"
        alt="movie"
        id="movieIMG"
      />
    </div>

    <div class="col">
      <div class="container">
          <div class="row">
            <h2><span id="movieTitle"></span></h2>
            </div>
        <div class="row">
          <p class="col">Genre : <span id="movieGenre"></span></p>
        </div>
        <div class="row">
          <p class="col">Director : <span id="movieDirector"></span></p>
        </div>
        <div class="row">
          <p class="col">Actor : <span id="movieActor"></span></p>
        </div>
        <div class="row">
          <p class="col">Duration : <span id="movieDuration"></span></p>
        </div>
        <div class="mt-4">
          <p>Description :</p>
          <p id="movieDescription">Lorem Ipsum</p>
        </div>
      </div>
    </div>
  </div>

  <div class="container pt-5" id="theaterMain">
    <div class="row">
        <div class="col">
            <p>Playing At:</p>
        </div>
    </div>
    <div class="row text-center bg-secondary py-3 rounded">
        <div class="col ">Theater</div>
        <div class="col ">ShowTime</div>
    </div>



    

</div>

</div>



<script>
    const getTheaterName = async (theaterID)=>{
        const theaterNameResponse = await fetch(`https://itcinemabackend-production.up.railway.app/theater/gettheaters?theaterID=${theaterID}`);
        const theaterNames = await theaterNameResponse.json();
        const theaterName = theaterNames.Data;
        return theaterName;
    }
    const getTheater = async(movieID)=>{
        const theaterResponse = await fetch(`https://itcinemabackend-production.up.railway.app/movie/getmoviedetails?movieID=${movieID}&date=2022-02-10`);
        //MASIH TESTING DAN BLM DIUBAH KE DATE.NOW()
        //const theaterResponse = await fetch(`https://localhost:44306/movie/getmoviedetails?movieID=${movieID}&date=2022-02-10`);
        const theaters = await theaterResponse.json();
        const theatersData = theaters.Data;
        console.log(theatersData);
        return theatersData;
    }

    const getActors = async(movieID)=>{
        const actorResponse = await fetch(`https://itcinemabackend-production.up.railway.app/actor/getactors?movieID=${movieID}`);
            const actors = await actorResponse.json();
            const actorsData = actors.Data.Actors;
            return actorsData;
    }
    const getMovie = async(movieID)=>{
        document.getElementById("mainContainer").style.visibility = 'hidden';
        const response = await fetch(`https://itcinemabackend-production.up.railway.app/movie/getmovies?movieID=${movieID}`);
        const datas = await response.json();
        if(datas.status === 400){
            //FAIL
           document.getElementById("mainContainer").innerText = 'ERROR OCCURED!';
        }else{
            //SUCCESS

            //Butuh akses buat ambil data genre
            //const response = await fetch(`https://itcinemabackend-production.up.railway.app/movie/getgenres?movieID=${movieID}`);
            //const genres = await response.json();
            //const genre = genres.Data[0].GenreName;
            const actorsData = await getActors(movieID);
            if(actorsData.length === 0){
                document.getElementById("movieActor").innerText = '-';
            }else{
                document.getElementById("movieActor").innerText = actorsData;
            }
            const movieData = datas.Data[0];
           document.getElementById("movieTitle").innerText =  movieData.MovieTitle
           //document.getElementById("movieGenre").innerText = genre.GenreName;
           document.getElementById("movieDirector").innerText = movieData.MovieDirector
           document.getElementById("movieDuration").innerText = `${movieData.MovieDuration} Minutes`
           document.getElementById("movieDescription").innerText = movieData.MovieDescription
           document.getElementById("movieIMG").src = movieData.PosterURL
           const TheaterMainContainer = document.getElementById("theaterMain");
           const theatersData = await getTheater(movieID);
           let theaterNames=[];
           for(let i =0; i<theatersData.PlayAt.length;i++){
               let tempData = await getTheaterName(theatersData.PlayAt[i].TheaterID);
               theaterNames.push(tempData);
           }
           for(let i =0;i<theaterNames.length;i++){
               const TheaterRow = document.createElement("div");
                TheaterRow.classList.add("row");
                TheaterRow.classList.add("py-2");


                const ColTheaterName = document.createElement("div");
                ColTheaterName.classList.add("col");
                ColTheaterName.classList.add("text-center");
                ColTheaterName.classList.add("align-middle");


                const TheaterNameP = document.createElement("p");
                TheaterNameP.classList.add("theaterName");
                TheaterNameP.classList.add("align-middle");
                TheaterNameP.classList.add("m-auto");
                TheaterNameP.innerText = theaterNames[i][0].TheaterName;

                const ColTheaterTime = document.createElement("div");
                ColTheaterTime.classList.add("col");


                const ContainerTheaterTime = document.createElement("div");
                ContainerTheaterTime.classList.add("text-center");
                ContainerTheaterTime.classList.add("d-flex");
                ContainerTheaterTime.classList.add("flex-row");
                const timeLength = theatersData.PlayAt[i].Time.length;
                //Tiap Showtime ada dikasih href ke theaterID masing masing
                for(let j = 0; j <  timeLength ; j++){
                    let TheaterTimeA = document.createElement("a");
                TheaterTimeA.classList.add("bg-secondary");
                TheaterTimeA.classList.add("rounded");
                TheaterTimeA.classList.add("p-2");
                TheaterTimeA.classList.add("m-1");
                TheaterTimeA.classList.add("text-decoration-none");
                TheaterTimeA.classList.add("text-reset");
                TheaterTimeA.classList.add("theaterTimeA");
                const theaterTime = theatersData.PlayAt[i].Time[j].PlayingAt;
                 const StartTime = new Date(theaterTime)
                 const hours = ("0" + StartTime.getHours()).slice(-2)
                const minutes = ("0" + StartTime.getMinutes()).slice(-2)
                TheaterTimeA.innerText = hours + ':' + minutes;
                TheaterTimeA.href = `/booking?scheduleid=${theatersData.PlayAt[i].Time[j].ScheduleID}`;
                ContainerTheaterTime.appendChild(TheaterTimeA);
                }
               

                TheaterRow.appendChild(ColTheaterName);
                ColTheaterName.appendChild(TheaterNameP);
                TheaterRow.appendChild(ColTheaterTime);
                ColTheaterTime.appendChild(ContainerTheaterTime);
                
                TheaterMainContainer.appendChild(TheaterRow);
           }

           document.getElementById("mainContainer").style.visibility = 'visible';
        }
        
    }

    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);
    const movieID = urlParams.get('id');
    try{
        getMovie(movieID);
    }catch(e){
        alert("An Error Occured");
    }
    
    
</script>